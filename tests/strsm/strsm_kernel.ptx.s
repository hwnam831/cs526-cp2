//
// Generated by LLVM NVPTX Back-End
//

.version 5.0
.target sm_61, texmode_independent
.address_size 64

	// .globl	strsm                   // -- Begin function strsm
                                        // @strsm
.entry strsm(
	.param .u64 .ptr .global .align 4 strsm_param_0,
	.param .u64 .ptr .global .align 4 strsm_param_1,
	.param .u64 .ptr .global .align 4 strsm_param_2,
	.param .u32 strsm_param_3,
	.param .u32 strsm_param_4,
	.param .u32 strsm_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<29>;

// %bb.0:                               // %entry
	ld.param.u32 	%r11, [strsm_param_3];
	ld.param.u64 	%rd10, [strsm_param_2];
	mov.u32 	%r12, %tid.x;
	mov.u32 	%r13, %tid.y;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r16, %ntid.x;
	ld.param.u32 	%r17, [strsm_param_5];
	mad.lo.s32 	%r1, %r16, %r14, %r12;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mad.lo.s32 	%r20, %r19, %r18, %r13;
	add.s32 	%r2, %r17, %r11;
	setp.lt.s32 	%p1, %r11, 1;
	shl.b32 	%r3, %r20, 13;
	mov.f32 	%f23, 0f00000000;
	@%p1 bra 	LBB0_6;
// %bb.1:                               // %for.body.preheader
	ld.param.u64 	%rd9, [strsm_param_0];
	ld.param.u64 	%rd11, [strsm_param_1];
	ld.param.u32 	%r15, [strsm_param_4];
	mad.lo.s32 	%r21, %r17, %r15, %r2;
	mul.wide.s32 	%rd13, %r21, 4;
	add.s64 	%rd3, %rd11, %rd13;
	and.b32  	%r4, %r11, 1;
	setp.eq.s32 	%p2, %r11, 1;
	mov.f32 	%f23, 0f00000000;
	mov.u32 	%r31, 0;
	@%p2 bra 	LBB0_4;
// %bb.2:                               // %for.body.preheader.new
	cvt.s64.s32 	%rd1, %r17;
	and.b32  	%r5, %r11, -2;
	cvt.u64.u32 	%rd14, %r3;
	add.s64 	%rd15, %rd1, %rd14;
	shl.b64 	%rd16, %rd15, 2;
	add.s64 	%rd17, %rd16, %rd9;
	add.s64 	%rd28, %rd17, 4;
	mov.f32 	%f23, 0f00000000;
	mov.u32 	%r31, 0;
	mov.u32 	%r30, %r1;
LBB0_3:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	ld.global.f32 	%f11, [%rd28+-4];
	mul.wide.u32 	%rd18, %r30, 4;
	add.s64 	%rd19, %rd3, %rd18;
	ld.global.f32 	%f12, [%rd19];
	fma.rn.f32 	%f13, %f11, %f12, %f23;
	ld.global.f32 	%f14, [%rd28];
	add.s32 	%r24, %r30, 8192;
	mul.wide.u32 	%rd20, %r24, 4;
	add.s64 	%rd21, %rd3, %rd20;
	ld.global.f32 	%f15, [%rd21];
	fma.rn.f32 	%f23, %f14, %f15, %f13;
	add.s32 	%r31, %r31, 2;
	add.s32 	%r30, %r30, 16384;
	add.s64 	%rd28, %rd28, 8;
	setp.eq.s32 	%p3, %r5, %r31;
	@%p3 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %for.cond.cleanup.loopexit.unr-lcssa
	setp.eq.s32 	%p4, %r4, 0;
	@%p4 bra 	LBB0_6;
// %bb.5:                               // %for.cond.cleanup.loopexit.epilog-lcssa
	mul.wide.s32 	%rd12, %r17, 4;
	add.s64 	%rd2, %rd9, %rd12;
	add.s32 	%r25, %r31, %r3;
	mul.wide.u32 	%rd22, %r25, 4;
	add.s64 	%rd5, %rd2, %rd22;
	shl.b32 	%r26, %r31, 13;
	add.s32 	%r27, %r26, %r1;
	mul.wide.u32 	%rd23, %r27, 4;
	add.s64 	%rd6, %rd3, %rd23;
	ld.global.f32 	%f16, [%rd5];
	ld.global.f32 	%f17, [%rd6];
	fma.rn.f32 	%f23, %f16, %f17, %f23;
LBB0_6:                                 // %for.cond.cleanup
	mul.wide.s32 	%rd24, %r2, 4;
	add.s64 	%rd25, %rd10, %rd24;
	add.s32 	%r28, %r3, %r1;
	mul.wide.u32 	%rd26, %r28, 4;
	add.s64 	%rd27, %rd25, %rd26;
	ld.global.f32 	%f18, [%rd27];
	sub.rn.f32 	%f19, %f18, %f23;
	st.global.f32 	[%rd27], %f19;
	ret;
                                        // -- End function
}
