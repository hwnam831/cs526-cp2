//
// Generated by LLVM NVPTX Back-End
//

.version 5.0
.target sm_61, texmode_independent
.address_size 64

	// .globl	cal                     // -- Begin function cal
                                        // @cal
.func  (.param .b32 func_retval0) cal(
	.param .b64 cal_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<2>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [cal_param_0];
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	setp.gt.f32 	%p1, %f1, %f2;
	selp.f32 	%f3, %f1, %f2, %p1;
	ld.f32 	%f4, [%rd1+8];
	setp.gt.f32 	%p2, %f3, %f4;
	selp.f32 	%f5, %f3, %f4, %p2;
	ld.f32 	%f6, [%rd1+12];
	setp.gt.f32 	%p3, %f5, %f6;
	selp.f32 	%f7, %f5, %f6, %p3;
	ld.f32 	%f8, [%rd1+20];
	setp.gt.f32 	%p4, %f7, %f8;
	selp.f32 	%f9, %f7, %f8, %p4;
	ld.f32 	%f10, [%rd1+24];
	setp.gt.f32 	%p5, %f9, %f10;
	selp.f32 	%f11, %f9, %f10, %p5;
	ld.f32 	%f12, [%rd1+28];
	setp.gt.f32 	%p6, %f11, %f12;
	selp.f32 	%f13, %f11, %f12, %p6;
	ld.f32 	%f14, [%rd1+32];
	setp.gt.f32 	%p7, %f13, %f14;
	selp.f32 	%f15, %f13, %f14, %p7;
	ld.f32 	%f16, [%rd1+16];
	setp.leu.f32 	%p8, %f15, %f16;
	selp.f32 	%f17, 0f3F800000, 0f00000000, %p8;
	st.param.f32 	[func_retval0+0], %f17;
	ret;
                                        // -- End function
}
	// .globl	imregionmax             // -- Begin function imregionmax
.entry imregionmax(
	.param .u64 .ptr .global .align 4 imregionmax_param_0,
	.param .u64 .ptr .global .align 4 imregionmax_param_1,
	.param .u32 imregionmax_param_2
)                                       // @imregionmax
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<41>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [imregionmax_param_0];
	ld.param.u64 	%rd2, [imregionmax_param_1];
	mov.u32 	%r1, %ctaid.y;
	shl.b32 	%r2, %r1, 4;
	mov.u32 	%r3, %tid.y;
	add.s32 	%r4, %r2, %r3;
	add.s32 	%r5, %r4, 16;
	mov.u32 	%r6, %ctaid.x;
	shl.b32 	%r7, %r6, 4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r9, %r7, %r8;
	add.s32 	%r10, %r9, 16;
	cvt.u64.u32 	%rd3, %r10;
	mul.wide.u32 	%rd4, %r5, 2064;
	cvt.u64.u32 	%rd5, %r7;
	cvt.u64.u32 	%rd6, %r8;
	add.s64 	%rd7, %rd6, %rd5;
	add.s64 	%rd8, %rd4, %rd7;
	shl.b64 	%rd9, %rd8, 2;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.f32 	%f1, [%rd10+64];
	add.s64 	%rd11, %rd7, -1;
	add.s64 	%rd12, %rd11, %rd4;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.f32 	%f2, [%rd14+64];
	add.s64 	%rd15, %rd7, -2;
	add.s64 	%rd16, %rd15, %rd4;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.f32 	%f3, [%rd18+64];
	add.s64 	%rd19, %rd4, -2064;
	add.s64 	%rd20, %rd4, %rd3;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd1, %rd21;
	ld.global.f32 	%f4, [%rd22+-8256];
	add.s64 	%rd23, %rd11, %rd19;
	shl.b64 	%rd24, %rd23, 2;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.f32 	%f5, [%rd25+64];
	add.s64 	%rd26, %rd15, %rd19;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.f32 	%f6, [%rd28+64];
	add.s64 	%rd29, %rd4, -4128;
	ld.global.f32 	%f7, [%rd22+-16512];
	add.s64 	%rd30, %rd11, %rd29;
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd32, %rd1, %rd31;
	ld.global.f32 	%f8, [%rd32+64];
	add.s64 	%rd33, %rd15, %rd29;
	shl.b64 	%rd34, %rd33, 2;
	add.s64 	%rd35, %rd1, %rd34;
	ld.global.f32 	%f9, [%rd35+64];
	setp.gt.f32 	%p1, %f1, %f2;
	selp.f32 	%f10, %f1, %f2, %p1;
	setp.gt.f32 	%p2, %f10, %f3;
	selp.f32 	%f11, %f10, %f3, %p2;
	setp.gt.f32 	%p3, %f11, %f4;
	selp.f32 	%f12, %f11, %f4, %p3;
	setp.gt.f32 	%p4, %f12, %f6;
	selp.f32 	%f13, %f12, %f6, %p4;
	setp.gt.f32 	%p5, %f13, %f7;
	selp.f32 	%f14, %f13, %f7, %p5;
	setp.gt.f32 	%p6, %f14, %f8;
	selp.f32 	%f15, %f14, %f8, %p6;
	setp.gt.f32 	%p7, %f15, %f9;
	selp.f32 	%f16, %f15, %f9, %p7;
	setp.leu.f32 	%p8, %f16, %f5;
	selp.f32 	%f17, 0f3F800000, 0f00000000, %p8;
	shl.b32 	%r11, %r4, 11;
	cvt.u64.u32 	%rd36, %r11;
	cvt.u64.u32 	%rd37, %r9;
	add.s64 	%rd38, %rd37, %rd36;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd40, %rd2, %rd39;
	st.global.f32 	[%rd40], %f17;
	ret;
                                        // -- End function
}
