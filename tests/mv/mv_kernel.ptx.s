//
// Generated by LLVM NVPTX Back-End
//

.version 5.0
.target sm_61, texmode_independent
.address_size 64

	// .globl	mv                      // -- Begin function mv
                                        // @mv
.entry mv(
	.param .u64 .ptr .global .align 4 mv_param_0,
	.param .u64 .ptr .global .align 4 mv_param_1,
	.param .u64 .ptr .global .align 4 mv_param_2,
	.param .u32 mv_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<16>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd6, [mv_param_2];
	ld.param.u64 	%rd5, [mv_param_1];
	ld.param.u64 	%rd8, [mv_param_0];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 8;
	mov.u32 	%r3, %tid.x;
	add.s32 	%r4, %r2, %r3;
	cvt.u64.u32 	%rd1, %r4;
	mul.wide.u32 	%rd9, %r4, 2048;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd2, %rd8, %rd10;
	mov.f32 	%f9, 0f00000000;
	mov.u64 	%rd15, 0;
LBB0_1:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	add.s64 	%rd11, %rd2, %rd15;
	ld.global.f32 	%f4, [%rd11];
	add.s64 	%rd12, %rd5, %rd15;
	ld.global.f32 	%f5, [%rd12];
	fma.rn.f32 	%f6, %f4, %f5, %f9;
	ld.global.f32 	%f7, [%rd11+4];
	ld.global.f32 	%f8, [%rd12+4];
	fma.rn.f32 	%f9, %f7, %f8, %f6;
	add.s64 	%rd15, %rd15, 8;
	cvt.u32.u64 	%r5, %rd15;
	setp.ne.s32 	%p1, %r5, 8192;
	@%p1 bra 	LBB0_1;
// %bb.2:                               // %for.end
	shl.b64 	%rd13, %rd1, 2;
	add.s64 	%rd14, %rd6, %rd13;
	st.global.f32 	[%rd14], %f9;
	ret;
                                        // -- End function
}
